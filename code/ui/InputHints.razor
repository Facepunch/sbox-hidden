@using System;
@using Sandbox;
@using Sandbox.UI;
@using Facepunch.Hidden;

@namespace Facepunch.Hidden
@attribute [StyleSheet( "/ui/InputHints.scss" )]
@inherits Panel

@code
{
	public static InputHints Current { get; private set; }

	public InputHint UseHint { get; private set; }
	public InputHint RunHint { get; private set; }
	public Panel Container { get; private set; }

	public InputHints()
	{
		StyleSheet.Load( "/ui/InputHints.scss" );
		Container = Add.Panel( "container" );
		Current = this;

		Update();
	}

	public void Update()
	{
		Container.DeleteChildren( true );

		RunHint = null;
		UseHint = null;

        if ( Game.LocalPawn is HiddenPlayer player )
		{
			if ( player.CurrentCamera is SpectateCamera )
			{
				AddHint( "attack1", "Next" );
			}
			else if ( player.Team is HiddenTeam )
			{
				AddHint( "attack1", "Slash or Feed on Corpse" );
				AddHint( "attack2", "Charge Instagib" );
				UseHint = AddHint( "use", "Grab, Throw, or Attach" );
				RunHint = AddHint( "run", "Leap" );
				AddHint( "jump", "Jump" );
			}
			else
			{
				AddHint( "attack1", "Fire" );
				AddHint( "reload", "Reload" );
				RunHint = AddHint( "run", "Sprint" );
				AddHint( "jump", "Jump" );
			}
		}
	}

    private InputHint AddHint( string button, string name )
	{
		var hint = Container.AddChild<InputHint>();
		hint.SetButton( button );
		hint.SetContent( name );
		return hint;
	}

	public override void Tick()
	{
		UpdateUseHint();
		base.Tick();
	}

	private void UpdateUseHint()
	{
		if ( UseHint == null ) return;
        if ( Game.LocalPawn is not HiddenPlayer player ) return;
		if ( player.Team is not HiddenTeam ) return;

		if ( player.Team is HiddenTeam )
		{
			if ( !player.GroundEntity.IsValid() )
			{
				if ( player.IsFrozen )
					RunHint.SetContent( "Leap from Wall" );
				else
					RunHint.SetContent( "Cling to Wall" );
			}
			else
			{
				RunHint.SetContent( "Leap" );
			}
				
			if ( player.PickupEntity.IsValid() )
			{
				if ( player.PickupEntity is PlayerCorpse )
					UseHint.SetContent( "Attach Corpse to World" );
				else
					UseHint.SetContent( "Throw or Drop" );
			}
			else
			{
				UseHint.SetContent( "Pickup Object or Body" );
			}
		}
	}
}
